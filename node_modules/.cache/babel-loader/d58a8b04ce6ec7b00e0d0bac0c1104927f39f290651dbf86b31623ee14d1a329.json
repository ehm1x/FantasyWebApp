{"ast":null,"code":"var _jsxFileName = \"C:\\\\FantasyFolder\\\\reactrebuild\\\\src\\\\pages\\\\TradeAnalyzer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TradeAnalyzer = ({\n  rosters,\n  currentOwnerId\n}) => {\n  _s();\n  const [state, setState] = useState({\n    stage: \"select-team\",\n    selectedTeam: null,\n    selectedPlayer: null,\n    selectedPlayers: [],\n    seectedPlayersTotal: null,\n    userTeam: rosters.find(roster => roster.owner_id === currentOwnerId),\n    userSelectedPlayers: [],\n    userSelectedPlayersTotal: null\n  });\n  const handleTeamSelect = team => {\n    setState(prevState => ({\n      ...prevState,\n      stage: \"select-player\",\n      selectedTeam: team\n    }));\n  };\n  const handlePlayerSelect = player => {\n    if (state.selectedPlayers.some(p => p.player_id === player.player_id)) {\n      setState(prevState => ({\n        ...prevState,\n        selectedPlayers: prevState.selectedPlayers.filter(p => p.player_id !== player.player_id)\n      }));\n    } else {\n      setState(prevState => ({\n        ...prevState,\n        selectedPlayers: [...prevState.selectedPlayers, player]\n      }));\n    }\n  };\n  const handleUserPlayerSelect = player => {\n    if (state.userSelectedPlayers.some(p => p.player_id === player.player_id)) {\n      setState(prevState => ({\n        ...prevState,\n        userSelectedPlayers: prevState.userSelectedPlayers.filter(p => p.player_id !== player.player_id)\n      }));\n    } else {\n      setState(prevState => ({\n        ...prevState,\n        userSelectedPlayers: [...prevState.userSelectedPlayers, player]\n      }));\n    }\n  };\n  const finishSelecting = () => {\n    setState(prevState => ({\n      ...prevState,\n      stage: \"done\"\n    }));\n  };\n  const finishUserSelecting = () => {\n    setState(prevState => ({\n      ...prevState,\n      stage: \"compare\"\n    }));\n  };\n  const comparePlayers = () => {\n    const totalTradeValueSelected = state.selectedPlayers.reduce((sum, player) => sum + player.tradeValue, 0);\n    const totalTradeValueUser = state.userSelectedPlayers.reduce((sum, player) => sum + player.tradeValue, 0);\n    return totalTradeValueSelected - totalTradeValueUser;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [state.stage === \"select-team\" && rosters.map(team => /*#__PURE__*/_jsxDEV(TeamButton, {\n      team: team,\n      onSelect: handleTeamSelect\n    }, team.owner_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this)), state.stage === \"select-player\" && state.selectedTeam.roster.map(player => /*#__PURE__*/_jsxDEV(PlayerButton, {\n      player: player,\n      isSelected: state.selectedPlayers.some(p => p.player_id === player.player_id),\n      onSelect: handlePlayerSelect\n    }, player.player_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this)), state.stage === \"select-player\" && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: finishSelecting,\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), state.stage === \"done\" && state.userTeam.roster.map(player => /*#__PURE__*/_jsxDEV(PlayerButton, {\n      player: player,\n      onSelect: handleUserPlayerSelect\n    }, player.player_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this)), state.stage === \"done\" && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: finishUserSelecting,\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), state.stage === \"compare\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"The difference in trade value is: \", comparePlayers()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Selected Players\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), state.selectedPlayers.map((player, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [player.name, \" - \", player.tradeValue]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Selected Players\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), state.userSelectedPlayers.map((player, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [player.name, \" - \", player.tradeValue]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(TradeAnalyzer, \"/xZR28KUf8vj6ts8zqNkq/5APP4=\");\n_c = TradeAnalyzer;\nconst TeamButton = ({\n  team,\n  onSelect\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: () => onSelect(team),\n  children: team.teamName\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 98,\n  columnNumber: 3\n}, this);\n_c2 = TeamButton;\nconst PlayerButton = ({\n  player,\n  onSelect,\n  isSelected\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: () => onSelect(player),\n  style: {\n    backgroundColor: isSelected ? 'green' : 'grey'\n  },\n  children: player.name\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 106,\n  columnNumber: 5\n}, this);\n_c3 = PlayerButton;\nexport default TradeAnalyzer;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TradeAnalyzer\");\n$RefreshReg$(_c2, \"TeamButton\");\n$RefreshReg$(_c3, \"PlayerButton\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TradeAnalyzer","rosters","currentOwnerId","_s","state","setState","stage","selectedTeam","selectedPlayer","selectedPlayers","seectedPlayersTotal","userTeam","find","roster","owner_id","userSelectedPlayers","userSelectedPlayersTotal","handleTeamSelect","team","prevState","handlePlayerSelect","player","some","p","player_id","filter","handleUserPlayerSelect","finishSelecting","finishUserSelecting","comparePlayers","totalTradeValueSelected","reduce","sum","tradeValue","totalTradeValueUser","children","map","TeamButton","onSelect","fileName","_jsxFileName","lineNumber","columnNumber","PlayerButton","isSelected","onClick","index","name","_c","teamName","_c2","style","backgroundColor","_c3","$RefreshReg$"],"sources":["C:/FantasyFolder/reactrebuild/src/pages/TradeAnalyzer.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst TradeAnalyzer = ({ rosters, currentOwnerId }) => {\r\n    const [state, setState] = useState({\r\n      stage: \"select-team\",\r\n      selectedTeam: null,\r\n      selectedPlayer: null,\r\n      selectedPlayers: [],\r\n      seectedPlayersTotal: null,\r\n      userTeam: rosters.find(roster => roster.owner_id === currentOwnerId),\r\n      userSelectedPlayers: [],\r\n      userSelectedPlayersTotal : null\r\n    });\r\n  \r\n    const handleTeamSelect = (team) => {\r\n      setState(prevState => ({ ...prevState, stage: \"select-player\", selectedTeam: team }));\r\n    };\r\n  \r\n    const handlePlayerSelect = (player) => {\r\n      if (state.selectedPlayers.some(p => p.player_id === player.player_id)) {\r\n        setState(prevState => ({ ...prevState, selectedPlayers: prevState.selectedPlayers.filter(p => p.player_id  !== player.player_id ) }));\r\n      } else {\r\n        setState(prevState => ({ ...prevState, selectedPlayers: [...prevState.selectedPlayers, player] }));\r\n      }\r\n    };\r\n  \r\n    const handleUserPlayerSelect = (player) => {\r\n      if (state.userSelectedPlayers.some(p => p.player_id  === player.player_id )) {\r\n        setState(prevState => ({ ...prevState, userSelectedPlayers: prevState.userSelectedPlayers.filter(p => p.player_id  !== player.player_id ) }));\r\n      } else {\r\n        setState(prevState => ({ ...prevState, userSelectedPlayers: [...prevState.userSelectedPlayers, player] }));\r\n      }\r\n    };\r\n\r\n  const finishSelecting = () => {\r\n    setState(prevState => ({ ...prevState, stage: \"done\" }));\r\n  }\r\n\r\n  const finishUserSelecting = () => {\r\n    setState(prevState => ({ ...prevState, stage: \"compare\" }));\r\n  }\r\n\r\n  const comparePlayers = () => {\r\n    const totalTradeValueSelected = state.selectedPlayers.reduce((sum, player) => sum + player.tradeValue, 0);\r\n    const totalTradeValueUser = state.userSelectedPlayers.reduce((sum, player) => sum + player.tradeValue, 0);\r\n    return totalTradeValueSelected - totalTradeValueUser;\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      {state.stage === \"select-team\" &&\r\n        rosters.map((team) => (\r\n          <TeamButton key={team.owner_id} team={team} onSelect={handleTeamSelect} />\r\n        ))}\r\n\r\n      {state.stage === \"select-player\" &&\r\n        state.selectedTeam.roster.map((player) => (\r\n          <PlayerButton key={player.player_id} player={player} isSelected={state.selectedPlayers.some(p => p.player_id === player.player_id)} onSelect={handlePlayerSelect} />\r\n        ))}\r\n\r\n      {state.stage === \"select-player\" && (\r\n        <button onClick={finishSelecting}>Done</button>\r\n      )}\r\n\r\n      {state.stage === \"done\" &&\r\n        state.userTeam.roster.map((player) => (\r\n          <PlayerButton key={player.player_id} player={player} onSelect={handleUserPlayerSelect} />\r\n        ))}\r\n\r\n      {state.stage === \"done\" && (\r\n        <button onClick={finishUserSelecting}>Done</button>\r\n      )}\r\n\r\n      {state.stage === \"compare\" && (\r\n        <p>The difference in trade value is: {comparePlayers()}</p>\r\n      )}\r\n\r\n      <h2>Selected Players</h2>\r\n      {state.selectedPlayers.map((player, index) => (\r\n        <p key={index}>\r\n          {player.name} - {player.tradeValue}\r\n        </p>\r\n      ))}\r\n\r\n      <h2>User Selected Players</h2>\r\n      {state.userSelectedPlayers.map((player, index) => (\r\n        <p key={index}>\r\n          {player.name} - {player.tradeValue}\r\n        </p>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TeamButton = ({ team, onSelect }) => (\r\n  <button onClick={() => onSelect(team)}>\r\n    {team.teamName}\r\n  </button>\r\n);\r\n\r\n\r\n\r\nconst PlayerButton = ({ player, onSelect, isSelected }) => (\r\n    <button onClick={() => onSelect(player)} style={{ backgroundColor: isSelected ? 'green' : 'grey' }}>\r\n      {player.name}\r\n    </button>\r\n  );\r\n\r\n  export default TradeAnalyzer; \r\n\r\n  \r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}