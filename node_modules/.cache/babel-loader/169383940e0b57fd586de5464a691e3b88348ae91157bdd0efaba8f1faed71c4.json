{"ast":null,"code":"var _jsxFileName = \"C:\\\\FantasyFolder\\\\reactrebuild\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Team from './team.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = 'https://api.sleeper.app/v1';\n\n// Main App Component\nconst App = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [leagues, setLeagues] = useState([]);\n  const [teams, setTeams] = useState([]);\n  const [selectedLeague, setSelectedLeague] = useState(null);\n  const [leagueId, setLeagueId] = useState(null);\n  const [userData, setUserData] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [leagueData, setLeagueData] = useState(null);\n  useEffect(() => {\n    if (username) {\n      getUserData();\n    }\n  }, [username]);\n  useEffect(() => {\n    if (selectedLeague) {\n      getSelectedLeague();\n    }\n  }, [selectedLeague]);\n  const getUserData = async () => {\n    const userDataResponse = await fetch(`${API_BASE}/user/${username}`);\n    setUserData(await userDataResponse.json());\n    setUserId(userData.user_id);\n    const leaguesDataResponse = await fetch(`${API_BASE}/user/${userId}/leagues/nfl/2023`);\n    setLeagues(await leaguesDataResponse.json());\n  };\n  const getSelectedLeague = async () => {};\n  const handleUsernameChange = event => {\n    setInputUsername(event.target.value);\n  };\n  const handleConfirmClick = event => {\n    setUsername(event.target.value);\n  };\n  const handleLeagueChange = event => {\n    setSelectedLeague(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: username,\n      onChange: handleUsernameChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedLeague,\n      onChange: handleLeagueChange,\n      children: leagues.map(league => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: league.id,\n        children: league.name\n      }, league.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), teams.map(team => /*#__PURE__*/_jsxDEV(Team, {\n      team: team\n    }, team.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"xndfwS9ew8x8IEuLdLWCdapu9so=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Team","jsxDEV","_jsxDEV","API_BASE","App","_s","username","setUsername","leagues","setLeagues","teams","setTeams","selectedLeague","setSelectedLeague","leagueId","setLeagueId","userData","setUserData","userId","setUserId","leagueData","setLeagueData","getUserData","getSelectedLeague","userDataResponse","fetch","json","user_id","leaguesDataResponse","handleUsernameChange","event","setInputUsername","target","value","handleConfirmClick","handleLeagueChange","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","league","id","name","team","_c","$RefreshReg$"],"sources":["C:/FantasyFolder/reactrebuild/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Team from './team.js'; \n\nconst API_BASE = 'https://api.sleeper.app/v1';\n\n\n\n// Main App Component\nconst App = () => {\n    const [username, setUsername] = useState('');\n    const [leagues, setLeagues] = useState([]);\n    const [teams, setTeams] = useState([]);\n    const [selectedLeague, setSelectedLeague] = useState(null);\n    const [leagueId, setLeagueId] = useState(null); \n    const [userData, setUserData] = useState(null); \n    const [userId, setUserId] = useState(null); \n    const [leagueData, setLeagueData] = useState(null); \n\n    useEffect(() => {\n        if (username) {\n            getUserData();\n        }\n    }, [username]);\n\n    useEffect(() => {\n        if (selectedLeague) {\n            getSelectedLeague();\n        }\n    }, [selectedLeague]);\n\n    const getUserData = async () => {\n        const userDataResponse = await fetch(`${API_BASE}/user/${username}`);\n        setUserData(await userDataResponse.json()); \n        setUserId(userData.user_id); \n\n        const leaguesDataResponse = await fetch(`${API_BASE}/user/${userId}/leagues/nfl/2023`)\n        setLeagues(await leaguesDataResponse.json()); \n    }\n\n    const getSelectedLeague = async () => {\n      \n    }\n\n    const handleUsernameChange = (event) => {\n        setInputUsername(event.target.value);\n    }\n\n    const handleConfirmClick = (event) =>{\n      setUsername(event.target.value); \n    }\n\n    const handleLeagueChange = (event) => {\n        setSelectedLeague(event.target.value);\n    }\n\n    return (\n        <div>\n            <input type=\"text\" value={username} onChange={handleUsernameChange} />\n            <select value={selectedLeague} onChange={handleLeagueChange}>\n                {leagues.map(league =>\n                    <option key={league.id} value={league.id}>{league.name}</option>\n                )}\n            </select>\n            {teams.map(team =>\n                <Team key={team.id} team={team} />\n            )}\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}