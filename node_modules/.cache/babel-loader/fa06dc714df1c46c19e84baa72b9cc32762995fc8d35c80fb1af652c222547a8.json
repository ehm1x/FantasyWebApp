{"ast":null,"code":"var _jsxFileName = \"C:\\\\FantasyFolder\\\\reactrebuild\\\\src\\\\pages\\\\TradeAnalyzer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TradeAnalyzer = ({\n  rosters,\n  currentOwnerId\n}) => {\n  _s();\n  const [state, setState] = useState({\n    stage: \"select-team\",\n    selectedTeam: null,\n    selectedPlayer: null,\n    selectedPlayers: [],\n    userTeam: rosters.find(roster => roster.owner_id === currentOwnerId),\n    userSelectedPlayers: []\n  });\n  const handleTeamSelect = team => {\n    setState(prevState => ({\n      ...prevState,\n      stage: \"select-player\",\n      selectedTeam: team\n    }));\n  };\n  const [selectedPlayers, setSelectedPlayers] = useState([]);\n  const handlePlayerSelect = player => {\n    if (selectedPlayers.some(p => p.id === player.id)) {\n      setSelectedPlayers(selectedPlayers.filter(p => p.id !== player.id));\n    } else {\n      setSelectedPlayers(prevState => [...prevState, player]);\n    }\n  };\n  const handleUserPlayerSelect = player => {\n    setState(prevState => ({\n      ...prevState,\n      userSelectedPlayers: [...prevState.userSelectedPlayers, player]\n    }));\n  };\n  const finishSelecting = () => {\n    setState(prevState => ({\n      ...prevState,\n      stage: \"done\"\n    }));\n  };\n  const finishUserSelecting = () => {\n    setState(prevState => ({\n      ...prevState,\n      stage: \"compare\"\n    }));\n  };\n  const comparePlayers = () => {\n    const totalTradeValueSelected = state.selectedPlayers.reduce((sum, player) => sum + player.tradeValue, 0);\n    const totalTradeValueUser = state.userSelectedPlayers.reduce((sum, player) => sum + player.tradeValue, 0);\n    return totalTradeValueSelected - totalTradeValueUser;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setState({\n        stage: \"select-team\",\n        selectedTeam: null,\n        selectedPlayer: null\n      }),\n      children: \"Trade Analyzer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), state.stage === \"select-team\" && rosters.map(team => /*#__PURE__*/_jsxDEV(TeamButton, {\n      team: team,\n      onSelect: handleTeamSelect\n    }, team.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this)), state.stage === \"select-player\" && state.selectedTeam.roster.map(player => /*#__PURE__*/_jsxDEV(PlayerButton, {\n      player: player,\n      onSelect: handlePlayerSelect\n    }, player.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this)), state.stage === \"done\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Selected player: \", state.selectedPlayer.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(TradeAnalyzer, \"M+SQ/R1nTaaLE6C4Oq+Uou+Euik=\");\n_c = TradeAnalyzer;\nconst TeamButton = ({\n  team,\n  onSelect\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: () => onSelect(team),\n  children: team.teamName\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 83,\n  columnNumber: 3\n}, this);\n_c2 = TeamButton;\nconst PlayerButton = ({\n  player,\n  onSelect,\n  isSelected\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: () => onSelect(player),\n  style: {\n    backgroundColor: isSelected ? 'green' : 'grey'\n  },\n  children: player.name\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 90,\n  columnNumber: 5\n}, this);\n_c3 = PlayerButton;\nexport default TradeAnalyzer;\n//   return (\n//     <button \n//       onClick={handleSelect} \n//       style={{ backgroundColor: isSelected ? 'green' : 'grey' }}\n//     >\n//       {player.name}\n//     </button>\n//   );\n// };\n\n//   state.selectedTeam.roster.map((player) => (\n//     <PlayerButton \n//       key={player.id} \n//       player={player} \n//       onSelect={handlePlayerSelect} \n//       isSelected={selectedPlayers.some(p => p.id === player.id)}\n//     />\n//   ))\n\n//   const handleTeamSelect = (team) => {\n//     setState({ stage: \"select-player\", selectedTeam: team });\n//   };\n\n//   const handlePlayerSelect = (player) => {\n//     setState({ stage: \"done\", selectedPlayer: player });\n//   };\n\n//   return (\n//     <div>\n//       <button\n//         onClick={() =>\n//           setState({\n//             stage: \"select-team\",\n//             selectedTeam: null,\n//             selectedPlayer: null,\n//           })\n//         }\n//       >\n//         Trade Analyzer\n//       </button>\n\n//       {state.stage === \"select-team\" &&\n//         rosters.map((team) => (\n//           <TeamButton key={team.id} team={team} onSelect={handleTeamSelect} />\n//         ))}\n\n//       {state.stage === \"select-player\" &&\n//         state.selectedTeam.roster.map((player) => (\n//           <PlayerButton\n//             key={player.id}\n//             player={player}\n//             onSelect={handlePlayerSelect}\n//           />\n//         ))}\n\n//       {state.stage === \"done\" && (\n//         <div>Selected player: {state.selectedPlayer.name}</div>\n//       )}\n//     </div>\n//   );\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TradeAnalyzer\");\n$RefreshReg$(_c2, \"TeamButton\");\n$RefreshReg$(_c3, \"PlayerButton\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TradeAnalyzer","rosters","currentOwnerId","_s","state","setState","stage","selectedTeam","selectedPlayer","selectedPlayers","userTeam","find","roster","owner_id","userSelectedPlayers","handleTeamSelect","team","prevState","setSelectedPlayers","handlePlayerSelect","player","some","p","id","filter","handleUserPlayerSelect","finishSelecting","finishUserSelecting","comparePlayers","totalTradeValueSelected","reduce","sum","tradeValue","totalTradeValueUser","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","TeamButton","onSelect","PlayerButton","name","_c","teamName","_c2","isSelected","style","backgroundColor","_c3","$RefreshReg$"],"sources":["C:/FantasyFolder/reactrebuild/src/pages/TradeAnalyzer.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst TradeAnalyzer = ({ rosters, currentOwnerId }) => {\r\n  const [state, setState] = useState({\r\n    stage: \"select-team\",\r\n    selectedTeam: null,\r\n    selectedPlayer: null,\r\n    selectedPlayers: [],\r\n    userTeam: rosters.find(roster => roster.owner_id === currentOwnerId),\r\n    userSelectedPlayers: []\r\n  });\r\n\r\n  const handleTeamSelect = (team) => {\r\n    setState(prevState => ({ ...prevState, stage: \"select-player\", selectedTeam: team }));\r\n  };\r\n\r\n  const [selectedPlayers, setSelectedPlayers] = useState([]);\r\n  \r\n  const handlePlayerSelect = (player) => {\r\n    if (selectedPlayers.some(p => p.id === player.id)) {\r\n      setSelectedPlayers(selectedPlayers.filter(p => p.id !== player.id));\r\n    } else {\r\n      setSelectedPlayers(prevState => [...prevState, player]);\r\n    }\r\n  };\r\n  \r\n  const handleUserPlayerSelect = (player) => {\r\n    setState(prevState => ({ ...prevState, userSelectedPlayers: [...prevState.userSelectedPlayers, player] }));\r\n  };\r\n\r\n  const finishSelecting = () => {\r\n    setState(prevState => ({ ...prevState, stage: \"done\" }));\r\n  }\r\n\r\n  const finishUserSelecting = () => {\r\n    setState(prevState => ({ ...prevState, stage: \"compare\" }));\r\n  }\r\n\r\n  const comparePlayers = () => {\r\n    const totalTradeValueSelected = state.selectedPlayers.reduce((sum, player) => sum + player.tradeValue, 0);\r\n    const totalTradeValueUser = state.userSelectedPlayers.reduce((sum, player) => sum + player.tradeValue, 0);\r\n    return totalTradeValueSelected - totalTradeValueUser;\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={() =>\r\n          setState({\r\n            stage: \"select-team\",\r\n            selectedTeam: null,\r\n            selectedPlayer: null,\r\n          })\r\n        }\r\n      >\r\n        Trade Analyzer\r\n      </button>\r\n  \r\n      {state.stage === \"select-team\" &&\r\n        rosters.map((team) => (\r\n          <TeamButton key={team.id} team={team} onSelect={handleTeamSelect} />\r\n        ))}\r\n  \r\n      {state.stage === \"select-player\" &&\r\n        state.selectedTeam.roster.map((player) => (\r\n          <PlayerButton\r\n            key={player.id}\r\n            player={player}\r\n            onSelect={handlePlayerSelect}\r\n          />\r\n        ))}\r\n  \r\n      {state.stage === \"done\" && (\r\n        <div>Selected player: {state.selectedPlayer.name}</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TeamButton = ({ team, onSelect }) => (\r\n  <button onClick={() => onSelect(team)}>\r\n    {team.teamName}\r\n  </button>\r\n);\r\n\r\n\r\nconst PlayerButton = ({ player, onSelect, isSelected }) => (\r\n    <button onClick={() => onSelect(player)} style={{ backgroundColor: isSelected ? 'green' : 'grey' }}>\r\n      {player.name}\r\n    </button>\r\n  );\r\n\r\n\r\n  export default TradeAnalyzer;\r\n//   return (\r\n//     <button \r\n//       onClick={handleSelect} \r\n//       style={{ backgroundColor: isSelected ? 'green' : 'grey' }}\r\n//     >\r\n//       {player.name}\r\n//     </button>\r\n//   );\r\n// };\r\n\r\n  \r\n//   state.selectedTeam.roster.map((player) => (\r\n//     <PlayerButton \r\n//       key={player.id} \r\n//       player={player} \r\n//       onSelect={handlePlayerSelect} \r\n//       isSelected={selectedPlayers.some(p => p.id === player.id)}\r\n//     />\r\n//   ))\r\n\r\n\r\n//   const handleTeamSelect = (team) => {\r\n//     setState({ stage: \"select-player\", selectedTeam: team });\r\n//   };\r\n  \r\n//   const handlePlayerSelect = (player) => {\r\n//     setState({ stage: \"done\", selectedPlayer: player });\r\n//   };\r\n  \r\n//   return (\r\n//     <div>\r\n//       <button\r\n//         onClick={() =>\r\n//           setState({\r\n//             stage: \"select-team\",\r\n//             selectedTeam: null,\r\n//             selectedPlayer: null,\r\n//           })\r\n//         }\r\n//       >\r\n//         Trade Analyzer\r\n//       </button>\r\n  \r\n//       {state.stage === \"select-team\" &&\r\n//         rosters.map((team) => (\r\n//           <TeamButton key={team.id} team={team} onSelect={handleTeamSelect} />\r\n//         ))}\r\n  \r\n//       {state.stage === \"select-player\" &&\r\n//         state.selectedTeam.roster.map((player) => (\r\n//           <PlayerButton\r\n//             key={player.id}\r\n//             player={player}\r\n//             onSelect={handlePlayerSelect}\r\n//           />\r\n//         ))}\r\n  \r\n//       {state.stage === \"done\" && (\r\n//         <div>Selected player: {state.selectedPlayer.name}</div>\r\n//       )}\r\n//     </div>\r\n//   );"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}