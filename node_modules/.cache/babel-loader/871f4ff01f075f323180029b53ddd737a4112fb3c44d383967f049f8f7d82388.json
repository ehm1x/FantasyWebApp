{"ast":null,"code":"var _jsxFileName = \"C:\\\\FantasyFolder\\\\reactrebuild\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n// import Team from \"./team.js\";\nimport { Team } from './teamclass';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"https://api.sleeper.app/v1\";\n\n// Main App Component\nconst App = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [inputUsername, setInputUsername] = useState(\"\");\n  const [leagues, setLeagues] = useState([]);\n  const [leagueTeams, setLeagueTeams] = useState([]);\n  const [selectedLeague, setSelectedLeague] = useState(null);\n  const [userData, setUserData] = useState(null);\n  const [leagueUsers, setLeagueUsers] = useState(null);\n  const [rosters, setRosters] = useState(null);\n  useEffect(() => {\n    if (username) {\n      fetchUserData(username);\n      let test = new Team(\"gg\", \"234\");\n      console.log(test);\n    }\n  }, [username]);\n  useEffect(() => {\n    if (selectedLeague) {\n      fetchLeagueDetails(selectedLeague.league_id);\n    }\n  }, [selectedLeague]);\n  const fetchUserData = async username => {\n    const userDataResponse = await fetch(`${API_BASE}/user/${username}`);\n    const userData = await userDataResponse.json();\n    const leaguesResponse = await fetch(`${API_BASE}/user/${userData.user_id}/leagues/nfl/2023`);\n    const leaguesData = await leaguesResponse.json();\n    setLeagues(leaguesData);\n  };\n  const handleUsernameChange = event => {\n    setInputUsername(event.target.value);\n  };\n  const handleConfirmUser = () => {\n    setUsername(inputUsername);\n  };\n  const handleLeagueChange = event => {\n    const leagueId = event.target.value;\n    const selectedLeague = leagues.find(league => league.league_id === leagueId);\n    setSelectedLeague(selectedLeague);\n  };\n  const fetchLeagueDetails = async leagueId => {\n    console.log(leagueId);\n    const leagueUsersResponse = await fetch(`${API_BASE}/league/${leagueId}/users`);\n    const leagueUsers = await leagueUsersResponse.json();\n    setLeagueUsers(leagueUsers);\n    console.log(leagueUsers);\n    const leagueTeamsResponse = await fetch(`${API_BASE}/league/${leagueId}/rosters`);\n    const leagueTeams = await leagueTeamsResponse.json();\n    setLeagueTeams(leagueTeams);\n    console.log(leagueTeams);\n    const rosters = await constructTeams(leagueUsers, leagueTeams);\n    setRosters(rosters);\n  };\n  const constructTeams = async (leagueUsers, leagueTeams) => {\n    if (!leagueUsers || !leagueTeams) {\n      console.error('ERROR LEAGUE UERS OR LEAGUE TEAMS IS NULL OR UNDEFINED');\n      return;\n    }\n    const teams = leagueUsers.map(async userTeam => {\n      const team = new Team(userTeam.display_name, userTeam.user_id);\n      const roster = leagueTeams.find(roster => roster.owner_id === userTeam.user_id);\n      let errorOccurred = false;\n      if (!Array.isArray(roster.players)) {\n        console.log(\"not an array\");\n        return;\n      }\n      for (const newPlayer of roster.players) {\n        let player = await getPlayerData(newPlayer);\n        if (!player) {\n          console.error(`No player found`);\n          errorOccurred = true;\n          break;\n        } else {\n          team.roster.push(player);\n        }\n      }\n      return team;\n    });\n    return Promise.all(teams);\n  };\n  async function getPlayerData(playerId) {\n    try {\n      const response = await fetch(`http://localhost:8080/api/nfl/player/${playerId}`);\n      const playerData = await response.json();\n      if (playerData.err) {\n        console.error(\"Error: \" < playerData.err);\n      } else {\n        return playerData;\n      }\n    } catch (error) {\n      console.error(\"Error: \", error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputUsername,\n      onChange: handleUsernameChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConfirmUser,\n      children: \"Confirm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), leagues.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"leagues\",\n        children: \"Select a League:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleLeagueChange,\n        children: leagues.map(league => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: league.league_id,\n          children: league.name\n        }, league.league_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLeagueChange,\n        children: \"Confirm League\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"c3HBMtRSe0yAnnUG7Ycdq8vlb6Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Team","jsxDEV","_jsxDEV","API_BASE","App","_s","username","setUsername","inputUsername","setInputUsername","leagues","setLeagues","leagueTeams","setLeagueTeams","selectedLeague","setSelectedLeague","userData","setUserData","leagueUsers","setLeagueUsers","rosters","setRosters","fetchUserData","test","console","log","fetchLeagueDetails","league_id","userDataResponse","fetch","json","leaguesResponse","user_id","leaguesData","handleUsernameChange","event","target","value","handleConfirmUser","handleLeagueChange","leagueId","find","league","leagueUsersResponse","leagueTeamsResponse","constructTeams","error","teams","map","userTeam","team","display_name","roster","owner_id","errorOccurred","Array","isArray","players","newPlayer","player","getPlayerData","push","Promise","all","playerId","response","playerData","err","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","htmlFor","name","_c","$RefreshReg$"],"sources":["C:/FantasyFolder/reactrebuild/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import Team from \"./team.js\";\nimport { Team } from './teamclass';\n\n\nconst API_BASE = \"https://api.sleeper.app/v1\";\n\n// Main App Component\nconst App = () => {\n  const [username, setUsername] = useState(\"\");\n  const [inputUsername, setInputUsername] = useState(\"\");\n  const [leagues, setLeagues] = useState([]);\n  const [leagueTeams, setLeagueTeams] = useState([]);\n  const [selectedLeague, setSelectedLeague] = useState(null);\n  const [userData, setUserData] = useState(null);\n  const [leagueUsers, setLeagueUsers] = useState(null);\n  const [rosters, setRosters] = useState(null); \n\n  useEffect(() => {\n    if (username) {\n      fetchUserData(username);\n      let test = new Team(\"gg\", \"234\"); \n      console.log(test); \n    }\n  }, [username]);\n\n  useEffect(() => {\n    if (selectedLeague) {\n      fetchLeagueDetails(selectedLeague.league_id);\n    }\n  }, [selectedLeague]);\n\n  const fetchUserData = async (username) => {\n    const userDataResponse = await fetch(`${API_BASE}/user/${username}`);\n    const userData = await userDataResponse.json();\n    const leaguesResponse = await fetch(\n      `${API_BASE}/user/${userData.user_id}/leagues/nfl/2023`\n    );\n    const leaguesData = await leaguesResponse.json();\n\n    setLeagues(leaguesData);\n  };\n\n\n  \n  const handleUsernameChange = (event) => {\n    setInputUsername(event.target.value);\n  };\n\n  const handleConfirmUser = () => {\n    setUsername(inputUsername);\n  };\n\n  const handleLeagueChange = (event) => {\n    const leagueId = event.target.value;\n    const selectedLeague = leagues.find(\n      (league) => league.league_id === leagueId\n    );\n    setSelectedLeague(selectedLeague);\n  };\n\n  const fetchLeagueDetails = async (leagueId) => {\n    console.log(leagueId); \n    const leagueUsersResponse = await fetch(\n      `${API_BASE}/league/${leagueId}/users`\n    );\n    const leagueUsers = await leagueUsersResponse.json();\n    setLeagueUsers(leagueUsers);\n    console.log(leagueUsers); \n\n    const leagueTeamsResponse = await fetch(\n      `${API_BASE}/league/${leagueId}/rosters`\n    );\n    const leagueTeams = await leagueTeamsResponse.json();\n    setLeagueTeams(leagueTeams); \n    console.log(leagueTeams); \n    const rosters = await constructTeams(leagueUsers, leagueTeams); \n    setRosters(rosters);\n\n  };\n\n  const constructTeams = async (leagueUsers, leagueTeams) => {\n    if(!leagueUsers || !leagueTeams){\n      console.error('ERROR LEAGUE UERS OR LEAGUE TEAMS IS NULL OR UNDEFINED'); \n      return; \n    }\n  const teams = leagueUsers.map(async (userTeam) => {\n    const team = new Team(userTeam.display_name, userTeam.user_id);\n    const roster = leagueTeams.find((roster) => roster.owner_id === userTeam.user_id);\n    let errorOccurred = false;\n\n    if (!Array.isArray(roster.players)) {\n      console.log(\"not an array\");\n      return;\n    }\n\n    for (const newPlayer of roster.players) {\n      let player = await getPlayerData(newPlayer);\n      \n      if (!player) {\n        console.error(`No player found`);\n        errorOccurred = true;\n        break;\n      } else {\n        team.roster.push(player);\n      }\n    }\n\n    return team;\n  });\n\n  return Promise.all(teams);\n};\n\n\nasync function getPlayerData(playerId) {\n  try {\n    const response = await fetch(\n      `http://localhost:8080/api/nfl/player/${playerId}`\n    );\n    const playerData = await response.json();\n    if (playerData.err) {\n      console.error(\"Error: \" < playerData.err);\n    } else {\n      return playerData;\n    }\n  } catch (error) {\n    console.error(\"Error: \", error);\n  }\n}\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={inputUsername}\n        onChange={handleUsernameChange}\n      />\n      <button onClick={handleConfirmUser}>Confirm</button>\n      {leagues.length > 0 && (\n        <div>\n          <label htmlFor=\"leagues\">Select a League:</label>\n          <select onChange={handleLeagueChange}>\n            {leagues.map((league) => (\n              <option key={league.league_id} value={league.league_id}>\n                {league.name}\n              </option>\n            ))}\n          </select>\n          <button onClick={handleLeagueChange}>Confirm League</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}