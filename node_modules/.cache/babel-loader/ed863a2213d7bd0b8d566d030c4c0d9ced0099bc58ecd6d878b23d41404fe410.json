{"ast":null,"code":"var _jsxFileName = \"C:\\\\FantasyFolder\\\\reactrebuild\\\\src\\\\App.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { createBrowserRouter, Routes, Route, Link, NavLink, createRoutesFromElements, RouterProvider } from \"react-router-dom\";\nimport \"./app.css\";\nimport Home from \"./pages/Home\";\nimport About from \"./pages/About\";\nimport RootLayout from \"./layouts/RootLayout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Team {\n  constructor(tName, owner) {\n    this.teamName = tName || \"\";\n    this.owner_id = owner;\n    this.roster = [];\n    this.totalPts = 0;\n    this.totalWeekly = 0;\n    this.totalTradeValue = 0;\n  }\n}\nconst API_BASE = \"https://api.sleeper.app/v1\";\n\n/*const router = createBrowserRouter(\n  createRoutesFromElements(\n    <Route path=\"/\" element = {<RootLayout />}>\n      <Route index element = {<Home input/>} /> \n      <Route path=\"about\" element={<About />} /> \n    </Route>\n  )\n)*/\n\n// Main App Component\nconst App = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [username, setUsername] = useState(\"\");\n  const [inputUsername, setInputUsername] = useState(\"\");\n  const [leagues, setLeagues] = useState([]);\n  const [leagueTeams, setLeagueTeams] = useState([]);\n  const [selectedLeague, setSelectedLeague] = useState(null);\n  const [userData, setUserData] = useState(null);\n  const [leagueUsers, setLeagueUsers] = useState(null);\n  const [rosters, setRosters] = useState(null);\n  const [confirmedLeague, setConfirmedLeague] = useState(false);\n  const [rosterDisplay, setRosterDisplay] = useState(null);\n  const [showTradeAnalyzer, setShowTradeAnalyzer] = useState(false);\n  useEffect(() => {\n    if (username) {\n      fetchUserData(username);\n      let test = new Team(\"gg\", \"234\");\n    }\n  }, [username]);\n  useEffect(() => {\n    if (selectedLeague) {\n      fetchLeagueDetails(selectedLeague.league_id);\n    }\n  }, [selectedLeague]);\n  const fetchUserData = async username => {\n    const userDataResponse = await fetch(`${API_BASE}/user/${username}`);\n    const userData = await userDataResponse.json();\n    const leaguesResponse = await fetch(`${API_BASE}/user/${userData.user_id}/leagues/nfl/2023`);\n    const leaguesData = await leaguesResponse.json();\n    setLeagues(leaguesData);\n  };\n  const handleUsernameChange = event => {\n    setInputUsername(event.target.value);\n  };\n  const handleConfirmUser = () => {\n    setUsername(inputUsername);\n  };\n  const handleLeagueChange = event => {\n    const leagueId = event.target.value;\n    const selectedLeague = leagues.find(league => league.league_id === leagueId);\n    setSelectedLeague(selectedLeague);\n  };\n  const fetchLeagueDetails = async leagueId => {\n    console.log(leagueId);\n    const leagueUsersResponse = await fetch(`${API_BASE}/league/${leagueId}/users`);\n    const leagueUsers = await leagueUsersResponse.json();\n    setLeagueUsers(leagueUsers);\n    console.log(leagueUsers);\n    const leagueTeamsResponse = await fetch(`${API_BASE}/league/${leagueId}/rosters`);\n    const leagueTeams = await leagueTeamsResponse.json();\n    setLeagueTeams(leagueTeams);\n    console.log(leagueTeams);\n    const rosters = await constructTeams(leagueUsers, leagueTeams);\n    setRosters(rosters);\n    console.log(rosters);\n  };\n  const constructTeams = async (leagueUsers, leagueTeams) => {\n    if (!leagueUsers || !leagueTeams) {\n      console.error(\"ERROR LEAGUE UERS OR LEAGUE TEAMS IS NULL OR UNDEFINED\");\n      return;\n    }\n    const teams = leagueUsers.map(async userTeam => {\n      const team = new Team(userTeam.display_name, userTeam.user_id);\n      const roster = leagueTeams.find(roster => roster.owner_id === userTeam.user_id);\n      let errorOccurred = false;\n      if (!Array.isArray(roster.players)) {\n        console.log(\"not an array\");\n        return;\n      }\n      for (const newPlayer of roster.players) {\n        let player = await getPlayerData(newPlayer);\n        if (!player) {\n          console.error(`No player found`);\n          errorOccurred = true;\n          break;\n        } else {\n          team.roster.push(player);\n        }\n      }\n      return team;\n    });\n    return Promise.all(teams);\n  };\n  async function getPlayerData(playerId) {\n    try {\n      const response = await fetch(`http://localhost:8080/api/nfl/player/${playerId}`);\n      const playerData = await response.json();\n      if (playerData.err) {\n        console.error(\"Error: \" < playerData.err);\n      } else {\n        return playerData;\n      }\n    } catch (error) {\n      console.error(\"Error: \", error);\n    }\n  }\n  const printRosters = rosters => {\n    if (!rosters) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No rosters to display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 14\n      }, this);\n    }\n    return rosters.map((team, teamIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Team: \", team.teamName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), team.roster.sort((a, b) => b.tradeValue - a.tradeValue).map((player, playerIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playerDetails\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: player.position\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: player.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Trade Value: \", player.tradeValue]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }, this)]\n      }, \"player-\" + playerIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this))]\n    }, \"team-\" + teamIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this));\n  };\n  const handleLeagueConfirm = () => {\n    setConfirmedLeague(true);\n  };\n  const handleShowRosters = () => {\n    setRosterDisplay(printRosters(rosters));\n  };\n  const TeamButton = ({\n    team,\n    onSelect\n  }) => /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => onSelect(team),\n    children: team.teamName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n  const PlayerButton = ({\n    player,\n    onSelect\n  }) => /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => onSelect(player),\n    children: player.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n  const TradeAnalyzer = ({\n    rosters\n  }) => {\n    _s();\n    const [state, setState] = useState({\n      stage: \"select-team\",\n      selectedTeam: null,\n      selectedPlayers: []\n    });\n    const handleTeamSelect = team => {\n      setState({\n        stage: \"select-player\",\n        selectedTeam: team\n      });\n    };\n    const handlePlayerSelect = player => {\n      setState({\n        stage: \"done\",\n        selectedPlayer: player\n      });\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setState({\n          stage: \"select-team\",\n          selectedTeam: null,\n          selectedPlayer: null\n        }),\n        children: \"Trade Analyzer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), state.stage === \"select-team\" && rosters.map(team => /*#__PURE__*/_jsxDEV(TeamButton, {\n        team: team,\n        onSelect: handleTeamSelect\n      }, team.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }, this)), state.stage === \"select-player\" && state.selectedTeam.roster.map(player => /*#__PURE__*/_jsxDEV(PlayerButton, {\n        player: player,\n        onSelect: handlePlayerSelect\n      }, player.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }, this)), state.stage === \"done\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Selected player: \", state.selectedPlayer.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this);\n  };\n  _s(TradeAnalyzer, \"jqRbxiVN5TZgY2QrSWrkG+awFXM=\");\n  const handleLeagueButton = event => {\n    setShowTradeAnalyzer(true);\n  };\n  const router = createBrowserRouter(createRoutesFromElements( /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 34\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(Home, {\n        inputUsername: inputUsername,\n        handleUsernameChange: handleUsernameChange,\n        handleConfirmUser: handleConfirmUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"about\",\n      element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 7\n  }, this)));\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"mnDLJmKdN7EusNKaf14PggcDmZk=\");\n_c = App;\nexport default App;\nexport const inputUsername = ''; // Assuming it's already defined in your code\nexport const handleUsernameChange = event => {\n  // Assuming it's already defined in your code\n};\nexport const handleConfirmUser = () => {\n  // Assuming it's already defined in your code\n};\n\n// Other code in your App.js file\n\n// <div className=\"app\">\n//   <div className=\"input-group\">\n//     <input\n//       type=\"text\"\n//       value={inputUsername}\n//       onChange={handleUsernameChange}\n//     />\n//     <button onClick={handleConfirmUser}>Confirm</button>\n//   </div>\n\n//   {leagues.length > 0 && (\n//     <div>\n//       <label htmlFor=\"leagues\">Select a League:</label>\n//       <select onChange={handleLeagueChange}>\n//         {leagues.map((league) => (\n//           <option key={league.league_id} value={league.league_id}>\n//             {league.name}\n//           </option>\n//         ))}\n//       </select>\n//       <button onClick={handleLeagueConfirm}>Confirm League</button>\n//       {confirmedLeague && (\n//         <button onClick={handleShowRosters}>Show Rosters</button>\n//       )}\n//       {confirmedLeague && (\n//         <button onClick={handleLeagueButton}>Start Trade Analysis</button>\n//       )}\n//     </div>\n//   )}\n\n//   {showTradeAnalyzer && (\n//     <div className=\"trade-analyzer\">\n//       <TradeAnalyzer rosters={rosters} />\n//     </div>\n//   )}\n\n//   {rosterDisplay}\n// </div>\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","createBrowserRouter","Routes","Route","Link","NavLink","createRoutesFromElements","RouterProvider","Home","About","RootLayout","jsxDEV","_jsxDEV","Team","constructor","tName","owner","teamName","owner_id","roster","totalPts","totalWeekly","totalTradeValue","API_BASE","App","_s2","_s","$RefreshSig$","username","setUsername","inputUsername","setInputUsername","leagues","setLeagues","leagueTeams","setLeagueTeams","selectedLeague","setSelectedLeague","userData","setUserData","leagueUsers","setLeagueUsers","rosters","setRosters","confirmedLeague","setConfirmedLeague","rosterDisplay","setRosterDisplay","showTradeAnalyzer","setShowTradeAnalyzer","fetchUserData","test","fetchLeagueDetails","league_id","userDataResponse","fetch","json","leaguesResponse","user_id","leaguesData","handleUsernameChange","event","target","value","handleConfirmUser","handleLeagueChange","leagueId","find","league","console","log","leagueUsersResponse","leagueTeamsResponse","constructTeams","error","teams","map","userTeam","team","display_name","errorOccurred","Array","isArray","players","newPlayer","player","getPlayerData","push","Promise","all","playerId","response","playerData","err","printRosters","children","fileName","_jsxFileName","lineNumber","columnNumber","teamIndex","sort","a","b","tradeValue","playerIndex","className","position","name","handleLeagueConfirm","handleShowRosters","TeamButton","onSelect","onClick","PlayerButton","TradeAnalyzer","state","setState","stage","selectedTeam","selectedPlayers","handleTeamSelect","handlePlayerSelect","selectedPlayer","id","handleLeagueButton","router","path","element","index","_c","$RefreshReg$"],"sources":["C:/FantasyFolder/reactrebuild/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  createBrowserRouter,\n  Routes,\n  Route,\n  Link,\n  NavLink,\n  createRoutesFromElements,\n  RouterProvider\n} from \"react-router-dom\";\nimport \"./app.css\";\n\nimport Home from \"./pages/Home\";\nimport About from \"./pages/About\";\nimport RootLayout from \"./layouts/RootLayout\";\n\n\nclass Team {\n  constructor(tName, owner) {\n    this.teamName = tName || \"\";\n    this.owner_id = owner;\n    this.roster = [];\n    this.totalPts = 0;\n    this.totalWeekly = 0;\n    this.totalTradeValue = 0;\n  }\n}\n\nconst API_BASE = \"https://api.sleeper.app/v1\";\n\n/*const router = createBrowserRouter(\n  createRoutesFromElements(\n    <Route path=\"/\" element = {<RootLayout />}>\n      <Route index element = {<Home input/>} /> \n      <Route path=\"about\" element={<About />} /> \n    </Route>\n  )\n)*/\n\n// Main App Component\nconst App = () => {\n  const [username, setUsername] = useState(\"\");\n  const [inputUsername, setInputUsername] = useState(\"\");\n  const [leagues, setLeagues] = useState([]);\n  const [leagueTeams, setLeagueTeams] = useState([]);\n  const [selectedLeague, setSelectedLeague] = useState(null);\n  const [userData, setUserData] = useState(null);\n  const [leagueUsers, setLeagueUsers] = useState(null);\n  const [rosters, setRosters] = useState(null);\n  const [confirmedLeague, setConfirmedLeague] = useState(false);\n  const [rosterDisplay, setRosterDisplay] = useState(null);\n  const [showTradeAnalyzer, setShowTradeAnalyzer] = useState(false);\n\n  \n  useEffect(() => {\n    if (username) {\n      fetchUserData(username);\n      let test = new Team(\"gg\", \"234\");\n    }\n  }, [username]);\n\n  useEffect(() => {\n    if (selectedLeague) {\n      fetchLeagueDetails(selectedLeague.league_id);\n    }\n  }, [selectedLeague]);\n\n  const fetchUserData = async (username) => {\n    const userDataResponse = await fetch(`${API_BASE}/user/${username}`);\n    const userData = await userDataResponse.json();\n    const leaguesResponse = await fetch(\n      `${API_BASE}/user/${userData.user_id}/leagues/nfl/2023`\n    );\n    const leaguesData = await leaguesResponse.json();\n\n    setLeagues(leaguesData);\n  };\n\n  const handleUsernameChange = (event) => {\n    setInputUsername(event.target.value);\n  };\n\n  const handleConfirmUser = () => {\n    setUsername(inputUsername);\n  };\n\n  const handleLeagueChange = (event) => {\n    const leagueId = event.target.value;\n    const selectedLeague = leagues.find(\n      (league) => league.league_id === leagueId\n    );\n    setSelectedLeague(selectedLeague);\n  };\n\n  const fetchLeagueDetails = async (leagueId) => {\n    console.log(leagueId);\n    const leagueUsersResponse = await fetch(\n      `${API_BASE}/league/${leagueId}/users`\n    );\n    const leagueUsers = await leagueUsersResponse.json();\n    setLeagueUsers(leagueUsers);\n    console.log(leagueUsers);\n\n    const leagueTeamsResponse = await fetch(\n      `${API_BASE}/league/${leagueId}/rosters`\n    );\n    const leagueTeams = await leagueTeamsResponse.json();\n    setLeagueTeams(leagueTeams);\n    console.log(leagueTeams);\n    const rosters = await constructTeams(leagueUsers, leagueTeams);\n    setRosters(rosters);\n    console.log(rosters);\n  };\n\n  const constructTeams = async (leagueUsers, leagueTeams) => {\n    if (!leagueUsers || !leagueTeams) {\n      console.error(\"ERROR LEAGUE UERS OR LEAGUE TEAMS IS NULL OR UNDEFINED\");\n      return;\n    }\n    const teams = leagueUsers.map(async (userTeam) => {\n      const team = new Team(userTeam.display_name, userTeam.user_id);\n      const roster = leagueTeams.find(\n        (roster) => roster.owner_id === userTeam.user_id\n      );\n      let errorOccurred = false;\n\n      if (!Array.isArray(roster.players)) {\n        console.log(\"not an array\");\n        return;\n      }\n\n      for (const newPlayer of roster.players) {\n        let player = await getPlayerData(newPlayer);\n\n        if (!player) {\n          console.error(`No player found`);\n          errorOccurred = true;\n          break;\n        } else {\n          team.roster.push(player);\n        }\n      }\n\n      return team;\n    });\n\n    return Promise.all(teams);\n  };\n\n  async function getPlayerData(playerId) {\n    try {\n      const response = await fetch(\n        `http://localhost:8080/api/nfl/player/${playerId}`\n      );\n      const playerData = await response.json();\n      if (playerData.err) {\n        console.error(\"Error: \" < playerData.err);\n      } else {\n        return playerData;\n      }\n    } catch (error) {\n      console.error(\"Error: \", error);\n    }\n  }\n\n  const printRosters = (rosters) => {\n    if (!rosters) {\n      return <p>No rosters to display</p>;\n    }\n\n    return rosters.map((team, teamIndex) => (\n      <div key={\"team-\" + teamIndex}>\n        <h2>Team: {team.teamName}</h2>\n        {team.roster\n          .sort((a, b) => b.tradeValue - a.tradeValue)\n          .map((player, playerIndex) => (\n            <div key={\"player-\" + playerIndex} className=\"playerDetails\">\n              <span>{player.position}</span>\n              <span>{player.name}</span>\n              <span>Trade Value: {player.tradeValue}</span>\n            </div>\n          ))}\n      </div>\n    ));\n  };\n\n  const handleLeagueConfirm = () => {\n    setConfirmedLeague(true);\n  };\n\n  const handleShowRosters = () => {\n    setRosterDisplay(printRosters(rosters));\n  };\n\n  const TeamButton = ({ team, onSelect }) => (\n    <button onClick={() => onSelect(team)}>{team.teamName}</button>\n  );\n\n  const PlayerButton = ({ player, onSelect }) => (\n    <button onClick={() => onSelect(player)}>{player.name}</button>\n  );\n\n  const TradeAnalyzer = ({ rosters }) => {\n    const [state, setState] = useState({\n      stage: \"select-team\",\n      selectedTeam: null,\n      selectedPlayers: [],\n    });\n\n    const handleTeamSelect = (team) => {\n      setState({ stage: \"select-player\", selectedTeam: team });\n    };\n\n    const handlePlayerSelect = (player) => {\n      setState({ stage: \"done\", selectedPlayer: player });\n    };\n\n    return (\n      <div>\n        <button\n          onClick={() =>\n            setState({\n              stage: \"select-team\",\n              selectedTeam: null,\n              selectedPlayer: null,\n            })\n          }\n        >\n          Trade Analyzer\n        </button>\n\n        {state.stage === \"select-team\" &&\n          rosters.map((team) => (\n            <TeamButton key={team.id} team={team} onSelect={handleTeamSelect} />\n          ))}\n\n        {state.stage === \"select-player\" &&\n          state.selectedTeam.roster.map((player) => (\n            <PlayerButton\n              key={player.id}\n              player={player}\n              onSelect={handlePlayerSelect}\n            />\n          ))}\n\n        {state.stage === \"done\" && (\n          <div>Selected player: {state.selectedPlayer.name}</div>\n        )}\n      </div>\n    );\n  };\n\n  const handleLeagueButton = (event) => {\n    setShowTradeAnalyzer(true);\n  };\n\n  const router = createBrowserRouter(\n    createRoutesFromElements(\n      <Route path=\"/\" element = {<RootLayout />}>\n        <Route index element = { <Home \n      inputUsername={inputUsername} \n      handleUsernameChange={handleUsernameChange}\n      handleConfirmUser={handleConfirmUser}\n    />} /> \n        <Route path=\"about\" element={<About />} /> \n      </Route>\n    )\n  )\n\n  return (\n    <RouterProvider router={router} />\n  );\n};\nexport default App;\n\nexport const inputUsername = ''; // Assuming it's already defined in your code\nexport const handleUsernameChange = (event) => {\n  // Assuming it's already defined in your code\n};\nexport const handleConfirmUser = () => {\n  // Assuming it's already defined in your code\n};\n\n// Other code in your App.js file\n\n\n// <div className=\"app\">\n    //   <div className=\"input-group\">\n    //     <input\n    //       type=\"text\"\n    //       value={inputUsername}\n    //       onChange={handleUsernameChange}\n    //     />\n    //     <button onClick={handleConfirmUser}>Confirm</button>\n    //   </div>\n\n    //   {leagues.length > 0 && (\n    //     <div>\n    //       <label htmlFor=\"leagues\">Select a League:</label>\n    //       <select onChange={handleLeagueChange}>\n    //         {leagues.map((league) => (\n    //           <option key={league.league_id} value={league.league_id}>\n    //             {league.name}\n    //           </option>\n    //         ))}\n    //       </select>\n    //       <button onClick={handleLeagueConfirm}>Confirm League</button>\n    //       {confirmedLeague && (\n    //         <button onClick={handleShowRosters}>Show Rosters</button>\n    //       )}\n    //       {confirmedLeague && (\n    //         <button onClick={handleLeagueButton}>Start Trade Analysis</button>\n    //       )}\n    //     </div>\n    //   )}\n\n    //   {showTradeAnalyzer && (\n    //     <div className=\"trade-analyzer\">\n    //       <TradeAnalyzer rosters={rosters} />\n    //     </div>\n    //   )}\n\n    //   {rosterDisplay}\n    // </div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}